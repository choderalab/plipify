name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  # schedule:
  #   # Nightly Tests
  #   - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # , macOS-latest, windows-latest]
        python-version: [3.7, 3.8]
    env:
      PYVER: ${{ matrix.python-version }}
      CI_OS: ${{ matrix.os }}
      PACKAGE: "plipify"

    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Fix conda in MacOS
        shell: bash
        if: startsWith(matrix.os, 'macOS')
        run: |
          sudo chown -R $(id -u):$(id -g) ${CONDA}

      - name: Create environment for package
        shell: bash
        run: |
          . devtools/github-actions/initialize_conda.sh
          conda activate
          conda info
          python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/test_env.yaml
          conda activate test

      - name: Install package
        shell: bash
        run: |
          . devtools/github-actions/initialize_conda.sh
          conda activate test
          python -m pip install . --no-deps
          conda list --show-channel-urls

      - name: Run tests (pytest)
        shell: bash
        run: |
          . devtools/github-actions/initialize_conda.sh
          conda activate test
          pytest -v --cov=$PACKAGE --cov-report=xml --color=yes --doctest-modules $PACKAGE/

      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          yml: ./.codecov.yml

  lint-format:
    runs-on: ubuntu-latest
    env:
      CI_OS: ubuntu-latest
      PACKAGE: "plipify"

    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Setup packages
        shell: bash
        run: |
          python -m pip install flake8 black

      - name: Run flake8
        shell: bash
        run: |
          flake8 $PACKAGE/

      - name: Run black check
        shell: bash
        if: always()
        run: |
          black --check -l 99 $PACKAGE/ --exclude=$PACKAGE/_version.py
